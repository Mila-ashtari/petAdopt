{"version":3,"sources":["assets/petLandingPage.png","components/UserSelection.js","components/Pets.js","components/FavPets.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserSlection","searchAhead","locationInput","axios","method","url","dataType","params","key","q","collection","limit","then","result","setState","locationList","data","results","catch","handleChnage","event","persist","location","target","value","handleClick","type","handleLocationClick","locationCoordinates","dataset","coordinates","innerText","handleSubmit","preventDefault","props","submitForm","state","action","id","className","htmlFor","name","onChange","this","map","coordinatesArr","place","geometry","data-coordinates","onClick","displayString","icon","e","activeClass","to","spy","smooth","offset","duration","React","Component","Pets","disabled","clickFavButton","petList","length","pet","src","petPhoto","alt","style","fontFamily","petName","petAge","petStatus","href","petUrl","data-pet-name","data-pet-url","data-pet-age","data-pet-status","data-pet-photo","data-pet-id","petId","FavPetList","showFavourites","favPetList","petData","data-key","console","log","clickCrossButton","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","library","add","fab","faDog","faCat","faDove","faHeart","faSearch","App","selectionObj","getPet","handlePetsClick","database","ref","push","alert","handleFavPetsClick","child","remove","on","response","newFavPetList","responseObj","val","inputObj","require","oauth","getClientCredentials","client","create","grant_type","client_id","client_secret","auth","paramObj","headers","Authorization","access_token","newPetList","animals","forEach","animal","photos","medium","status","age","petLandingPage","UserSelection","FavPets","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,4C,kOC4H5BC,E,kDApHX,aAAc,IAAD,8BACT,gBASJC,YAAY,SAACC,GACTC,IAAM,CACFC,OAAO,MACPC,IAAI,kDACJC,SAAS,QACTC,OAAO,CACHC,IAAI,mCACJC,EAAEP,EACFQ,WAAW,YACXC,MAAM,KAEXC,MAAK,SAACC,GACL,EAAKC,SAAS,CACVC,aAAaF,EAAOG,KAAKC,aAGhCC,OAAM,WACH,EAAKJ,SAAS,CACVC,aAAa,SA5BZ,EAiCbI,aAAa,SAACC,GACVA,EAAMC,UAEN,EAAKP,SAAS,CACVQ,SAASF,EAAMG,OAAOC,QAG1B,EAAKvB,YAAYmB,EAAMG,OAAOC,QAxCrB,EA2CbC,YAAY,SAACL,GACTA,EAAMC,UACN,EAAKP,SAAS,CACVY,KAAKN,EAAMG,OAAOC,SA9Cb,EAkDbG,oBAAoB,SAACP,GACjBA,EAAMC,UAEN,EAAKP,SAAS,CACZc,oBAAoBR,EAAMG,OAAOM,QAAQC,YACzCR,SAASF,EAAMG,OAAOQ,UACtBhB,aAAa,MAxDN,EA2DbiB,aAAa,SAACZ,GACVA,EAAMa,iBACN,EAAKC,MAAMC,WAAW,EAAKC,MAAMV,KAAM,EAAKU,MAAMR,sBA3DlD,EAAKQ,MAAM,CACPV,KAAK,GACLJ,SAAS,GACTM,oBAAoB,GACpBb,aAAa,IANR,E,qDA+DJ,IAAD,OAEJ,OAEI,0BAAMsB,OAAO,GAAGC,GAAG,iBACf,kCACI,iGAEA,yBAAKC,UAAU,YACX,2BAAOC,QAAQ,iBAAf,YACA,2BAAOd,KAAK,OAAOe,KAAK,WAAWH,GAAG,gBAAiBI,SAAUC,KAAKxB,aACtEK,MAAOmB,KAAKP,MAAMd,WAClB,4BAEKqB,KAAKP,MAAMrB,aAAa6B,KAAI,SAACtB,GAC1B,IAAMuB,EAAe,CAACvB,EAASwB,MAAMC,SAASjB,YAAY,GAAGR,EAASwB,MAAMC,SAASjB,YAAY,IACjG,OACI,wBAAIS,UAAU,iBAAiBS,mBAAkBH,EAAgBI,QAAS,EAAKtB,qBAAsBL,EAAS4B,oBAM9H,yBAAKX,UAAU,QAtBb,CAAC,MAAO,OAuBKK,KAAI,SAAClB,GACZ,OACI,kBAAC,WAAD,KACI,+BAAO,kBAAC,IAAD,CAAiBa,UAAU,OAAOY,KAAI,UAAKzB,KAAlD,IAA8EA,GAC9E,2BAAOA,KAAK,QAASe,KAAK,OAAOQ,QAAS,EAAKxB,YAAaD,MAAOE,QAK/E,+BAAO,kBAAC,IAAD,CAAiBa,UAAU,OAAOY,KAAK,SAA9C,SACA,2BAAOzB,KAAK,QAASe,KAAK,OAAOQ,QAASN,KAAKlB,YAAaD,MAAM,UAEtE,4BAAQyB,QAAS,SAACG,GAAKA,EAAEnB,mBAAmB,kBAAC,OAAD,CACxCoB,YAAY,SACZC,GAAG,gBACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,IACVT,QAASN,KAAKX,cAP0B,6B,GApGrC2B,IAAMC,WC+BlBC,E,4MA9BXpC,YAAY,SAAC2B,GACTA,EAAE7B,OAAOuC,SAAS,OAClB,EAAK5B,MAAM6B,eAAeX,EAAE7B,OAAOM,U,uDAG9B,IAAD,OACJ,OACA,kBAAC,WAAD,KAC4B,GAA3Bc,KAAKT,MAAM8B,QAAQC,OAAY,uBAAI1B,UAAU,iBAAgB,kBAAC,IAAD,CAAiBA,UAAU,OAAOY,KAAK,WAArE,mBAAsH,4BAClJ,6BAASZ,UAAU,qBAAqBD,GAAG,iBAC1CK,KAAKT,MAAM8B,QAAQpB,KAAI,SAACsB,GACrB,OACI,yBAAK1D,IAAK0D,EAAI1D,IAAK+B,UAAU,gBACzB,yBAAK4B,IAAKD,EAAIE,SAAUC,IAAI,KAC5B,yBAAK9B,UAAU,WACX,uBAAGA,UAAU,OAAO+B,MAAO,CAAEC,WAAY,iBAAkB,wCAAoBL,EAAIM,SACnF,uBAAGjC,UAAU,MAAM+B,MAAO,CAAEC,WAAY,iBAAkB,uCAAmBL,EAAIO,QACjF,uBAAGlC,UAAU,SAAS+B,MAAO,CAAEC,WAAY,iBAAkB,0CAAsBL,EAAIQ,WACvF,2BAAG,uBAAGC,KAAMT,EAAIU,OAAQN,MAAO,CAAEC,WAAY,iBAA1C,eAEP,4BAAQ7C,KAAK,SAASa,UAAU,YAAasC,gBAAeX,EAAIM,QAASM,eAAcZ,EAAIU,OAAQG,eAAcb,EAAIO,OAAQO,kBAAiBd,EAAIQ,UAAWO,iBAAgBf,EAAIE,SAAWc,cAAahB,EAAIiB,MAAOlC,QAAS,EAAKxB,aAAlO,oB,GArBLmC,aC8CJwB,E,kDAhDX,aAAc,IAAD,8BACT,gBAKJ3D,YAAY,WACJ,EAAKW,MAAMiD,eACX,EAAKvE,SAAS,CACXuE,gBAAe,IAKlB,EAAKvE,SAAS,CACVuE,gBAAe,KAbvB,EAAKjD,MAAM,CACPiD,gBAAe,GAHV,E,qDAoBJ,IAAD,OACR,OACI,iCACI,4BAAQpC,QAASN,KAAKlB,YAAac,UAAU,cAAa,wCAA1D,eAA0F,yCACzFI,KAAKP,MAAMiD,eACR,6BAAS9C,UAAU,mBACgB,GAA9BI,KAAKT,MAAMoD,WAAWrB,OAAYtB,KAAKT,MAAMoD,WAAW1C,KAAI,YAAmB,IAAjBpC,EAAgB,EAAhBA,IAAK+E,EAAW,EAAXA,QAChE,OACA,yBAAK/E,IAAKA,EAAK+B,UAAU,gBACrB,4BAAQA,UAAU,QAAQiD,WAAUhF,EAAKqE,gBAAeU,EAAQf,QAASM,eAAcS,EAAQX,OAAQG,eAAcQ,EAAQd,OAAQO,kBAAiBO,EAAQb,UAAWO,iBAAgBM,EAAQnB,SAAWc,cAAaK,EAAQJ,MAAOlC,QAAS,SAACG,GAAKqC,QAAQC,IAAItC,EAAE7B,OAAOM,SAC5Q,EAAKK,MAAMyD,iBAAiBvC,EAAE7B,OAAOM,WADrC,UAEA,yBAAKsC,IAAKoB,EAAQnB,SAAUC,IAAI,KAChC,yBAAK9B,UAAU,WACX,uBAAGA,UAAU,OAAO+B,MAAO,CAAEC,WAAY,iBAAkB,wCAAoBgB,EAAQf,SACvF,uBAAGjC,UAAU,MAAM+B,MAAO,CAAEC,WAAY,iBAAkB,uCAAmBgB,EAAQd,QACrF,uBAAGlC,UAAU,SAAS+B,MAAO,CAAEC,WAAY,iBAAkB,0CAAsBgB,EAAQb,WAC3F,2BAAG,uBAAGC,KAAMY,EAAQX,OAAQN,MAAO,CAAEC,WAAY,iBAA9C,eAEP,4BAAQ7C,KAAK,SAASa,UAAU,YAAY+B,MAAO,CAAC,MAAQ,QAA5D,cAGR,uBAAG/B,UAAU,UAAb,2BAET,uC,GA5CcqB,a,+DCWzBgC,IAASC,cATM,CACXC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKIR,QAAf,ECNAS,IAAQC,IAAIC,IAAKC,IAAOC,IAAOD,IAAOE,IAAQC,IAASC,K,IAiIxCC,E,kDA9Hb,aAAc,IAAD,8BACX,gBAmEJ7E,aAAa,SAACN,EAAMJ,GAElB,IAAMwF,EAAa,CACjBpF,KAAMA,EACNJ,SAASA,GAEX,EAAKyF,OAAOD,IA1EC,EA4EfE,gBAAgB,YAA0D,IAAxDvC,EAAuD,EAAvDA,OAAQU,EAA+C,EAA/CA,MAAOX,EAAwC,EAAxCA,QAASJ,EAA+B,EAA/BA,SAAUM,EAAqB,EAArBA,UAAWE,EAAU,EAAVA,OAC3D,EAAKxC,MAAMkD,WAAWrB,OAAO,EACf2B,EAASqB,WAAWC,MAC5BC,KAAK,CACT3C,QAAQA,EACRC,OAAOA,EACPG,OAAOA,EACPF,UAAUA,EACVN,SAASA,EACTe,MAAMA,IAIViC,MAAM,gDAzFO,EA2FfC,mBAAmB,YAAU,IAAR7G,EAAO,EAAPA,IACLoF,EAASqB,WAAWC,MAC5BI,MAAM9G,GAAK+G,UA3Ff,EAAKnF,MAAM,CACT4B,QAAQ,GACRsB,WAAW,IAJF,E,gEAQQ,IAAD,OACFM,EAASqB,WAAWC,MAC5BM,GAAG,SAAS,SAACC,GACjB,IAAIC,EAAc,GACdC,EAAYF,EAASG,MACzB,IAAI,IAAIpH,KAAOmH,EACbD,EAAcP,KAAK,CAAC3G,IAAIA,EAAK+E,QAAQoC,EAAYnH,KAEnD,EAAKM,SAAS,CACdwE,WAAWoC,S,sEAKNG,G,+FACH1H,EAAQ2H,EAAQ,IAChBC,EAAQD,EAAQ,IAChBE,EAAuBD,EAAME,OAAO9H,EAAM+H,SAAU,CAC1D7H,IAAK,4CACL8H,WAAY,qBACZC,UAAW,qDACXC,cAAe,6C,SAEAL,I,OAGnB,IAAQxH,KAHF8H,E,OAEAC,EAAS,GACAV,EAEQ,KAAlBA,EAASrH,KACR+H,EAAS/H,GAAKqH,EAASrH,IAI7BL,EAAM,CACJC,OAAO,MACPC,IAAI,uCACJmI,QAAQ,CACNC,cAAc,UAAD,OAAYH,EAAKI,eAEhCpI,SAAS,QACTC,OAAOgI,IACN3H,MAAK,SAACC,GACP,IAAM8H,EAAW,GACjB9H,EAAOG,KAAK4H,QAAQC,SAAQ,SAASC,GACP,IAAxBA,EAAOC,OAAO9E,QAChB0E,EAAWxB,KAAK,CACd/C,SAAS0E,EAAOC,OAAO,GAAGC,OAC1BxE,QAAQsE,EAAOrG,KACfmC,OAAOkE,EAAOzI,IACdqE,UAAUoE,EAAOG,OACjB9D,MAAM2D,EAAOxG,GACbmC,OAAOqE,EAAOI,SAIpB,EAAKpI,SAAS,CACZkD,QAAQ2E,O,iIAkCT,OACG,kBAAC,WAAD,KACE,4BAAQpG,UAAU,WAChB,yBAAK4B,IAAKgF,IAAgB9E,IAAI,KAC9B,6BACE,uCAAY,gDAAZ,UACA,8EACA,gCAAQ,kBAAC,OAAD,CACIhB,YAAY,SACZC,GAAG,gBACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANd,aAOW,6BAPX,0BAWZ,0BAAMnB,UAAU,WACd,kBAAC6G,EAAD,CAAejH,WAAYQ,KAAKX,eAChC,kBAACqH,EAAD,CAAS/D,WAAY3C,KAAKP,MAAMkD,WAAYK,iBAAkBhD,KAAK0E,qBACnE,kBAAC,EAAD,CAAMrD,QAASrB,KAAKP,MAAM4B,QAAUsB,WAAY3C,KAAKP,MAAMkD,WAAYvB,eAAgBpB,KAAKqE,wB,GAxHpFrD,IAAMC,WCFJ0F,QACW,cAA7BC,OAAOjI,SAASkI,UAEe,UAA7BD,OAAOjI,SAASkI,UAEhBD,OAAOjI,SAASkI,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrJ,MAAK,SAAAsJ,GACJA,EAAaC,gBAEdjJ,OAAM,SAAAkJ,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.c375e0c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/petLandingPage.ad797d35.png\";","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\n\r\nclass UserSlection extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            type:\"\",\r\n            location:\"\",\r\n            locationCoordinates:\"\",\r\n            locationList:[]\r\n        }\r\n    }\r\n\r\n    searchAhead=(locationInput)=>{\r\n        axios({\r\n            method:'GET',                                                       \r\n            url:'http://www.mapquestapi.com/search/v3/prediction',\r\n            dataType:'jsonp',\r\n            params:{\r\n                key:\"e3cHA9SUBfDTPsePNXGN8YlK3Z71Ofwr\",\r\n                q:locationInput,\r\n                collection:\"adminArea\",\r\n                limit:5,\r\n            }\r\n        }).then((result)=>{\r\n            this.setState({\r\n                locationList:result.data.results\r\n            })\r\n        })\r\n        .catch(()=>{\r\n            this.setState({\r\n                locationList:[]\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChnage=(event)=>{\r\n        event.persist()\r\n        // updating state with user's location input\r\n        this.setState({\r\n            location:event.target.value\r\n        })\r\n        // passing the user location input to searchAhead API call\r\n        this.searchAhead(event.target.value)\r\n    }\r\n    // updatind type state with user's selection\r\n    handleClick=(event)=>{\r\n        event.persist()\r\n        this.setState({\r\n            type:event.target.value\r\n        })\r\n    }\r\n    // storing location selection coordinates in location state\r\n    handleLocationClick=(event)=>{\r\n        event.persist()\r\n        // updating locationCoordinates state to be past to app component, location state to be displayed as input value and locationList to empty array so no options are displayed after user selection.\r\n        this.setState({\r\n          locationCoordinates:event.target.dataset.coordinates,\r\n          location:event.target.innerText,\r\n          locationList:[]\r\n    }) \r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault()\r\n        this.props.submitForm(this.state.type, this.state.locationCoordinates)\r\n    }\r\n    render(){\r\n        let typeArray=[\"dog\", \"cat\"]\r\n        return(\r\n            // user preferences fieldset\r\n            <form action=\"\" id=\"userSelection\">\r\n                <fieldset>\r\n                    <legend>indicate your preferences below to find your next best friend</legend>\r\n                    {/* location input field */}\r\n                    <div className=\"location\">\r\n                        <label htmlFor=\"locationInput\">location</label>\r\n                        <input type=\"text\" name=\"location\" id=\"locationInput\"  onChange={this.handleChnage} \r\n                        value={this.state.location}/>\r\n                        <ul>\r\n                            {/* displays suggested areas based from searchAhead API call*/}\r\n                            {this.state.locationList.map((location)=>{\r\n                                const coordinatesArr=[location.place.geometry.coordinates[1],location.place.geometry.coordinates[0]]\r\n                                return(\r\n                                    <li className=\"locationOption\" data-coordinates={coordinatesArr} onClick={this.handleLocationClick}>{location.displayString}</li>  \r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    {/* displaying the type options to the user */}\r\n                    <div className=\"type\">\r\n                        {typeArray.map((type)=>{\r\n                            return (\r\n                                <Fragment>\r\n                                    <label><FontAwesomeIcon className=\"icon\" icon={`${type}`}></FontAwesomeIcon> {type}</label>\r\n                                    <input type=\"radio\"  name=\"type\" onClick={this.handleClick} value={type}/>\r\n                                </Fragment>\r\n                            )\r\n                            \r\n                        })}\r\n                        <label><FontAwesomeIcon className=\"icon\" icon=\"dove\"></FontAwesomeIcon> bird</label>\r\n                        <input type=\"radio\"  name=\"type\" onClick={this.handleClick} value=\"bird\"/>\r\n                    </div>\r\n                    <button onClick={(e)=>{e.preventDefault()}}><Link\r\n                        activeClass=\"active\"\r\n                        to=\"searchResults\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration={500}\r\n                        onClick={this.handleSubmit}\r\n                    >get your cutie pet</Link>\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default UserSlection","import React from 'react'\r\nimport { Fragment } from 'react';\r\nimport { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nclass Pets extends Component {\r\n    handleClick=(e)=>{\r\n        e.target.disabled='true'\r\n        this.props.clickFavButton(e.target.dataset)  \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <Fragment>\r\n        {this.props.petList.length!=0 ? <p  className=\"searchResults\"><FontAwesomeIcon className='icon' icon='search'></FontAwesomeIcon> Search Results</p> : <p></p>}\r\n            <section className=\"pets searchResults\" id=\"searchResults\">\r\n            {this.props.petList.map((pet)=>{ \r\n                return(\r\n                    <div key={pet.key} className=\"petContainer\">\r\n                        <img src={pet.petPhoto} alt=\"\"/>\r\n                        <div className=\"petInfo\">\r\n                            <p className=\"name\" style={{ fontFamily: 'Indie Flower' }}><span>Name: </span>{pet.petName}</p>\r\n                            <p className=\"age\" style={{ fontFamily: 'Indie Flower' }}><span>Age: </span>{pet.petAge}</p>\r\n                            <p className=\"status\" style={{ fontFamily: 'Indie Flower' }}><span>Status: </span>{pet.petStatus}</p>\r\n                            <p><a href={pet.petUrl} style={{ fontFamily: 'Indie Flower' }}>more info</a></p>\r\n                        </div>\r\n                        <button type='button' className='favButton'  data-pet-name={pet.petName} data-pet-url={pet.petUrl} data-pet-age={pet.petAge} data-pet-status={pet.petStatus} data-pet-photo={pet.petPhoto}  data-pet-id={pet.petId} onClick={this.handleClick}>&#9829;</button>  \r\n                    </div>\r\n                )\r\n            })}      \r\n            </section>       \r\n    </Fragment>\r\n             \r\n        )}\r\n}\r\n\r\nexport default Pets","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nclass FavPetList extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            showFavourites:false\r\n        }\r\n    }\r\n    handleClick=()=>{\r\n        if (this.state.showFavourites){\r\n            this.setState({\r\n               showFavourites:false\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                showFavourites:true\r\n            }) \r\n        }\r\n       \r\n    }\r\n    render(){\r\n    return(\r\n        <section>\r\n            <button onClick={this.handleClick} className='favourites'><span>&#9829;</span> favourites <span>&#9829;</span></button>\r\n            {this.state.showFavourites ? \r\n                <section className=\"pets favourites\">\r\n                    {this.props.favPetList.length!=0 ? this.props.favPetList.map(({key, petData})=>{ \r\n                        return(\r\n                        <div key={key} className=\"petContainer\">\r\n                            <button className=\"cross\" data-key={key} data-pet-name={petData.petName} data-pet-url={petData.petUrl} data-pet-age={petData.petAge} data-pet-status={petData.petStatus} data-pet-photo={petData.petPhoto}  data-pet-id={petData.petId} onClick={(e)=>{console.log(e.target.dataset)\r\n                            this.props.clickCrossButton(e.target.dataset)}}>&#9747;</button>\r\n                            <img src={petData.petPhoto} alt=\"\"/>\r\n                            <div className=\"petInfo\">\r\n                                <p className=\"name\" style={{ fontFamily: 'Indie Flower' }}><span>Name: </span>{petData.petName}</p>\r\n                                <p className=\"age\" style={{ fontFamily: 'Indie Flower' }}><span>Age: </span>{petData.petAge}</p>\r\n                                <p className=\"status\" style={{ fontFamily: 'Indie Flower' }}><span>Status: </span>{petData.petStatus}</p>\r\n                                <p><a href={petData.petUrl} style={{ fontFamily: 'Indie Flower' }}>more info</a></p>\r\n                            </div>\r\n                            <button type=\"button\" className=\"favButton\" style={{'color':'red'}}>&#9829;</button>\r\n                        </div>\r\n                        )\r\n                }): <p className='noFavs'>you have no favourites</p>}              \r\n            </section>:\r\n           <section></section>}\r\n        </section>\r\n    )\r\n}\r\n}\r\nexport default FavPetList","// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Initialize Firebase\r\n// *** USE YOUR CONFIG OBJECT ***\r\nconst config = {\r\n    apiKey: \"AIzaSyAL1ueb-9WlYCHYltsWF9vOHUdA3v89leI\",\r\n    authDomain: \"petadopt-2c659.firebaseapp.com\",\r\n    databaseURL: \"https://petadopt-2c659.firebaseio.com\",\r\n    projectId: \"petadopt-2c659\",\r\n    storageBucket: \"petadopt-2c659.appspot.com\",\r\n    messagingSenderId: \"844686578631\",\r\n    appId: \"1:844686578631:web:0dcbc4b2e9a4276c60ffe2\"\r\n  };\r\nfirebase.initializeApp(config);\r\n\r\n// this exports the CONFIGURED version of firebase\r\nexport default firebase;","import React, { Fragment } from 'react';\r\nimport './App.scss';\r\nimport UserSelection from './components/UserSelection'\r\nimport Pets from './components/Pets'\r\nimport FavPets from './components/FavPets'\r\nimport petLandingPage from './assets/petLandingPage.png'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faDog, faCat, faDove, faHeart ,faSearch} from '@fortawesome/free-solid-svg-icons'\r\nimport firebase from './firebase';\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n \r\nlibrary.add(fab, faDog, faCat, faDog, faDove, faHeart, faSearch) \r\n\r\nclass App extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      petList:[],\r\n      favPetList:[]\r\n    }\r\n  }\r\n  // getting the favourite pets data from firebase database\r\n  componentDidMount() {\r\n      const dbRef = firebase.database().ref();\r\n      dbRef.on('value', (response) => {\r\n        let newFavPetList=[]\r\n        let responseObj=response.val()\r\n        for(let key in responseObj){\r\n          newFavPetList.push({key:key, petData:responseObj[key]})\r\n        }\r\n        this.setState({\r\n        favPetList:newFavPetList,\r\n      })\r\n      })\r\n  }\r\n  // getting animal info with an axios call \r\nasync getPet(inputObj){\r\n    const axios = require('axios');\r\n    const oauth = require('axios-oauth-client');\r\n    const getClientCredentials = oauth.client(axios.create(), {\r\n    url: 'https://api.petfinder.com/v2/oauth2/token',\r\n    grant_type: 'client_credentials',\r\n    client_id: 'ekGvHgiY5LvPGX6SYZLpLAax3umf2Q1GxBAuHoRCgpJZ6Aj19e',\r\n    client_secret: 'Dsd5eqTmjNDVo31SDuKICTeZfxZP7rfsoGorHOyw',\r\n})\r\nconst auth = await getClientCredentials();\r\n// construct param object with non empty key value pair\r\nconst paramObj={}\r\nfor(let key in inputObj){\r\n    \r\n  if(inputObj[key] !== \"\"){\r\n      paramObj[key]=inputObj[key]\r\n  }\r\n\r\n}  \r\naxios({\r\n  method:'GET',                                                       \r\n  url:'https://api.petfinder.com/v2/animals',\r\n  headers:{\r\n    Authorization: `Bearer ${auth.access_token}`,\r\n  },\r\n  dataType:'jsonp',\r\n  params:paramObj\r\n}).then((result)=>{\r\n  const newPetList=[]\r\n  result.data.animals.forEach(function(animal){\r\n    if (animal.photos.length!== 0){\r\n      newPetList.push({\r\n        petPhoto:animal.photos[0].medium,\r\n        petName:animal.name,\r\n        petUrl:animal.url,\r\n        petStatus:animal.status,\r\n        petId:animal.id,\r\n        petAge:animal.age\r\n      })\r\n    }\r\n  })\r\n  this.setState({\r\n    petList:newPetList\r\n  })\r\n})\r\n}\r\nhandleSubmit=(type, location)=>{\r\n  // get pets data with user selection\r\n  const selectionObj={\r\n    type: type,\r\n    location:location,\r\n  }\r\n  this.getPet(selectionObj)\r\n}\r\nhandlePetsClick=({petAge, petId, petName, petPhoto, petStatus, petUrl})=>{\r\n if(this.state.favPetList.length<5){\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.push({\r\n      petName:petName,\r\n      petAge:petAge,\r\n      petUrl:petUrl,\r\n      petStatus:petStatus,\r\n      petPhoto:petPhoto,\r\n      petId:petId\r\n  })\r\n}\r\nelse{\r\n  alert('you have added five favourites to your list')\r\n}}\r\nhandleFavPetsClick=({key})=>{\r\n  const dbRef = firebase.database().ref();\r\n  dbRef.child(key).remove();\r\n}\r\n\r\n render(){\r\n\r\n   return(\r\n      <Fragment>\r\n        <header className=\"wrapper\">\r\n          <img src={petLandingPage} alt=\"\"/>\r\n          <div>\r\n            <h1>Adopt a <span>forever friend</span> today</h1>\r\n            <p>Adopt a pet who needs your care and love today.</p>\r\n            <button><Link\r\n                        activeClass=\"active\"\r\n                        to=\"userSelection\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration={500}\r\n                    >meet your <br></br>forever friend now!</Link>\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <main className=\"wrapper\">\r\n          <UserSelection submitForm={this.handleSubmit}></UserSelection>\r\n          <FavPets favPetList={this.state.favPetList} clickCrossButton={this.handleFavPetsClick}></FavPets>\r\n          <Pets petList={this.state.petList}  favPetList={this.state.favPetList} clickFavButton={this.handlePetsClick}></Pets>\r\n        </main>\r\n      </Fragment>\r\n   )\r\n };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}